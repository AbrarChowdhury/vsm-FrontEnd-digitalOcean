[{"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\patient.component.jsx":"1","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\deleteButton\\deleteButton.jsx":"2","D:\\Work\\BioForge\\vsm-front-end\\src\\index.js":"3","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\index.js":"4","D:\\Work\\BioForge\\vsm-front-end\\src\\App.js":"5","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\cards.component.jsx":"6","D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\dashboard\\dashboard.js":"7","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\updatePatientForm.component.jsx":"8","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\card\\card.component.jsx":"9","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\chart\\chart.component.jsx":"10","D:\\Work\\BioForge\\vsm-front-end\\src\\reportWebVitals.js":"11","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\NavBar\\Navbar.js":"12","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\addPatientForm.component.jsx":"13","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\RemovePatientForm.component.js":"14","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\chart\\chart.config.js":"15"},{"size":11483,"mtime":1610607597963,"results":"16","hashOfConfig":"17"},{"size":381,"mtime":1610342729174,"results":"18","hashOfConfig":"17"},{"size":517,"mtime":1610342729179,"results":"19","hashOfConfig":"17"},{"size":209,"mtime":1610344097957,"results":"20","hashOfConfig":"17"},{"size":1291,"mtime":1610531138568,"results":"21","hashOfConfig":"17"},{"size":1804,"mtime":1610617752953,"results":"22","hashOfConfig":"17"},{"size":381,"mtime":1610345200628,"results":"23","hashOfConfig":"17"},{"size":1278,"mtime":1610439217559,"results":"24","hashOfConfig":"17"},{"size":8912,"mtime":1610617449352,"results":"25","hashOfConfig":"17"},{"size":847,"mtime":1610607580112,"results":"26","hashOfConfig":"17"},{"size":375,"mtime":1610342729185,"results":"27","hashOfConfig":"17"},{"size":3033,"mtime":1610623354619,"results":"28","hashOfConfig":"17"},{"size":7053,"mtime":1610622724659,"results":"29","hashOfConfig":"17"},{"size":4522,"mtime":1610624384307,"results":"30","hashOfConfig":"17"},{"size":583,"mtime":1610607386098,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1cxrmgn",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\patient.component.jsx",["66","67","68","69","70","71","72","73","74","75","76","77","78","79"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\deleteButton\\deleteButton.jsx",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\index.js",[],["80","81"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\index.js",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\App.js",[],["82","83"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\cards.component.jsx",["84","85","86","87","88","89","90","91"],"D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\dashboard\\dashboard.js",["92"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\updatePatientForm.component.jsx",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\card\\card.component.jsx",["93","94","95","96","97","98","99","100"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\chart\\chart.component.jsx",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\reportWebVitals.js",[],["101","102"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\NavBar\\Navbar.js",["103","104","105","106","107","108","109","110","111","112","113"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\addPatientForm.component.jsx",["114","115","116","117"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport Navbar from '../NavBar/Navbar'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core/'\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n\r\n  },\r\n  container: {\r\n    margin: '20px 20px 0px 20px',\r\n  },\r\n  textHeader: {\r\n    textAlign: 'center',\r\n    color: '#64D7EB',\r\n    justifyContent: 'center',\r\n  },\r\n  notchedOutline: {\r\n    borderWidth: \"1px\",\r\n    borderColor: \"#64D7EB\"\r\n  },\r\n  btn1: {\r\n    background: '#707070',\r\n    '&:hover': {\r\n      backgroundColor: '#707070',\r\n    },\r\n    color: 'white',\r\n    width: 140,\r\n  },\r\n  btn: {\r\n    background: 'linear-gradient(45deg, #55D0B3 30%, #64D7EB 90%)',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    width: 140,\r\n  },\r\n  textField: {\r\n\r\n    marginBottom: '20px',\r\n\r\n  },\r\n  dialogHeader: {\r\n    color:\"#707070\",\r\n    textAlign: 'center',\r\n  },\r\n  buttons: {\r\n    alignSelf: 'center',\r\n  }\r\n\r\n})\r\n)\r\n\r\nfunction AddPatientForm() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [bedIndex, setBedIndex] = useState();\r\n  const initialState = { name: '', bed: '', age: '', sex: '' }\r\n  const [formData, setFormData] = useState(initialState)\r\n  const [open, setOpen] = useState(false);\r\n\r\n\r\n\r\n  const [values, setValues] = useState({\r\n    bed: '',\r\n    Name: '',\r\n    Age: '',\r\n    Sex: '',\r\n  })\r\n\r\n  const data = [\r\n    { quarter: 1, earnings: 13000 },\r\n    { quarter: 2, earnings: 16500 },\r\n    { quarter: 3, earnings: 14250 },\r\n    { quarter: 4, earnings: 19000 },\r\n    { quarter: 5, earnings: 19000 },\r\n    { quarter: 6, earnings: 19000 },\r\n    { quarter: 7, earnings: 19000 },\r\n    { quarter: 8, earnings: 19000 },\r\n    { quarter: 9, earnings: 19000 },\r\n  ]\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const newPatient = {\r\n      bed: bedIndex || undefined,\r\n      name: values.Name || undefined,\r\n      age: values.Age || undefined,\r\n      sex: values.Sex || undefined,\r\n\r\n    }\r\n\r\n\r\n    console.log(\"formData: \", values)\r\n\r\n\r\n\r\n    axios.post('http://localhost:5000/patient', newPatient)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    setFormData(initialState)\r\n\r\n  }\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value })\r\n  }\r\n  // const handleChange = (e) => {\r\n  //   const { name, value } = e.target\r\n  //   setFormData({ ...formData, [name]: value })\r\n  // }\r\n  const handleClickOpen = (index) => {\r\n    setOpen(true);\r\n    index = index + 1\r\n    setBedIndex(index)\r\n    console.log(index);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Navbar></Navbar>\r\n      <div className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          {data.map((elem, index) => (\r\n            <Grid item xs={12} sm={6} md={3} xl={4} key={data.indexOf(elem)}>\r\n              <Card >\r\n                <CardActionArea onClick={() => handleClickOpen(index)} style={{ height: '250px' }} >\r\n                  <CardContent>\r\n                    <Typography className={classes.textHeader} variant=\"h5\" >\r\n                      + ADD\r\n                    </Typography>\r\n                    <Typography className={classes.textHeader} variant=\"h5\" >\r\n                      BED {index + 1}\r\n                    </Typography>\r\n\r\n                  </CardContent>\r\n                </CardActionArea>\r\n\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle className={classes.dialogHeader} >Create a Patient</DialogTitle>\r\n        <DialogContent>\r\n          <TextField autoFocus className={classes.textField} onChange={handleChange('Name')} fullWidth label=\"First Name\" variant=\"outlined\" InputProps={{ classes: { notchedOutline: classes.notchedOutline } }} />\r\n          <TextField className={classes.textField} fullWidth label=\"Last Name\" variant=\"outlined\" InputProps={{ classes: { notchedOutline: classes.notchedOutline } }} />\r\n          <TextField className={classes.textField} fullWidth onChange={handleChange('Age')} label=\"Age\" variant=\"outlined\" InputProps={{ classes: { notchedOutline: classes.notchedOutline } }} />\r\n          <TextField className={classes.textField} fullWidth onChange={handleChange('Sex')} label=\"Sex\" variant=\"outlined\" InputProps={{ classes: { notchedOutline: classes.notchedOutline } }} />\r\n          <TextField className={classes.textField} fullWidth label=\"Diagnosis\" variant=\"outlined\" InputProps={{ classes: { notchedOutline: classes.notchedOutline } }} />\r\n          <TextField className={classes.textField} fullWidth label=\"Admission Date\" variant=\"outlined\" InputProps={{ classes: { notchedOutline: classes.notchedOutline } }} />\r\n          <TextField className={classes.textField} fullWidth label=\"Consultant, Department\" variant=\"outlined\" InputProps={{ classes: { notchedOutline: classes.notchedOutline } }} />\r\n          <TextField className={classes.textField} fullWidth label=\"Duty Doctor\" variant=\"outlined\" InputProps={{ classes: { notchedOutline: classes.notchedOutline } }} />\r\n        </DialogContent>\r\n        <span className={classes.buttons}>\r\n          <DialogActions>\r\n            <Button className={classes.btn1} onClick={handleClose} >\r\n              Cancel\r\n          </Button>\r\n            <Button className={classes.btn} onClick={handleSubmit} color=\"primary\">\r\n              Save\r\n          </Button>\r\n          </DialogActions>\r\n        </span>\r\n      </Dialog>\r\n\r\n      {/* <h1>Add new Patient</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"bed\" placeholder=\"bed number\" value={formData.bed} onChange={handleChange} />\r\n        <input type=\"text\" name=\"name\" placeholder=\"name\" value={formData.name} onChange={handleChange} />\r\n        <input type=\"text\" name=\"age\" placeholder=\"age\" value={formData.age} onChange={handleChange} />\r\n        <input type=\"text\" name=\"sex\" placeholder=\"sex\" value={formData.sex} onChange={handleChange} />\r\n        <input type=\"submit\" name=\"button\" />\r\n      </form> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddPatientForm\r\n","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\RemovePatientForm.component.js",["118"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\chart\\chart.config.js",[],{"ruleId":"119","severity":1,"message":"120","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":22},{"ruleId":"119","severity":1,"message":"123","line":4,"column":36,"nodeType":"121","messageId":"122","endLine":4,"endColumn":41},{"ruleId":"119","severity":1,"message":"124","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":25},{"ruleId":"119","severity":1,"message":"125","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":20},{"ruleId":"119","severity":1,"message":"126","line":13,"column":8,"nodeType":"121","messageId":"122","endLine":13,"endColumn":12},{"ruleId":"119","severity":1,"message":"127","line":14,"column":10,"nodeType":"121","messageId":"122","endLine":14,"endColumn":18},{"ruleId":"119","severity":1,"message":"128","line":17,"column":10,"nodeType":"121","messageId":"122","endLine":17,"endColumn":16},{"ruleId":"119","severity":1,"message":"129","line":101,"column":12,"nodeType":"121","messageId":"122","endLine":101,"endColumn":19},{"ruleId":"119","severity":1,"message":"130","line":101,"column":21,"nodeType":"121","messageId":"122","endLine":101,"endColumn":31},{"ruleId":"119","severity":1,"message":"131","line":102,"column":12,"nodeType":"121","messageId":"122","endLine":102,"endColumn":28},{"ruleId":"119","severity":1,"message":"132","line":105,"column":11,"nodeType":"121","messageId":"122","endLine":105,"endColumn":23},{"ruleId":"119","severity":1,"message":"133","line":109,"column":11,"nodeType":"121","messageId":"122","endLine":109,"endColumn":23},{"ruleId":"134","severity":1,"message":"135","line":116,"column":5,"nodeType":"121","endLine":116,"endColumn":14,"suggestions":"136"},{"ruleId":"134","severity":1,"message":"137","line":116,"column":15,"nodeType":"138","endLine":122,"endColumn":6},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"139","replacedBy":"143"},{"ruleId":"141","replacedBy":"144"},{"ruleId":"119","severity":1,"message":"145","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":22},{"ruleId":"119","severity":1,"message":"123","line":3,"column":36,"nodeType":"121","messageId":"122","endLine":3,"endColumn":41},{"ruleId":"119","severity":1,"message":"146","line":25,"column":9,"nodeType":"121","messageId":"122","endLine":25,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":43,"column":49,"nodeType":"138","messageId":"149","endLine":43,"endColumn":51},{"ruleId":"147","severity":1,"message":"148","line":44,"column":34,"nodeType":"138","messageId":"149","endLine":44,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":46,"column":34,"nodeType":"152","messageId":"153","endLine":46,"endColumn":36},{"ruleId":"134","severity":1,"message":"154","line":58,"column":6,"nodeType":"155","endLine":58,"endColumn":8,"suggestions":"156"},{"ruleId":"119","severity":1,"message":"157","line":1,"column":10,"nodeType":"121","messageId":"122","endLine":1,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":22},{"ruleId":"119","severity":1,"message":"123","line":3,"column":36,"nodeType":"121","messageId":"122","endLine":3,"endColumn":41},{"ruleId":"119","severity":1,"message":"158","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":14},{"ruleId":"119","severity":1,"message":"159","line":8,"column":8,"nodeType":"121","messageId":"122","endLine":8,"endColumn":12},{"ruleId":"119","severity":1,"message":"127","line":9,"column":10,"nodeType":"121","messageId":"122","endLine":9,"endColumn":18},{"ruleId":"119","severity":1,"message":"145","line":9,"column":20,"nodeType":"121","messageId":"122","endLine":9,"endColumn":24},{"ruleId":"119","severity":1,"message":"160","line":104,"column":18,"nodeType":"121","messageId":"122","endLine":104,"endColumn":25},{"ruleId":"134","severity":1,"message":"154","line":115,"column":8,"nodeType":"155","endLine":115,"endColumn":10,"suggestions":"161"},{"ruleId":"139","replacedBy":"162"},{"ruleId":"141","replacedBy":"163"},{"ruleId":"119","severity":1,"message":"120","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":22},{"ruleId":"119","severity":1,"message":"123","line":2,"column":36,"nodeType":"121","messageId":"122","endLine":2,"endColumn":41},{"ruleId":"119","severity":1,"message":"158","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":14},{"ruleId":"119","severity":1,"message":"164","line":8,"column":8,"nodeType":"121","messageId":"122","endLine":8,"endColumn":16},{"ruleId":"119","severity":1,"message":"165","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":21},{"ruleId":"119","severity":1,"message":"166","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":21},{"ruleId":"119","severity":1,"message":"167","line":13,"column":16,"nodeType":"121","messageId":"122","endLine":13,"endColumn":23},{"ruleId":"119","severity":1,"message":"168","line":15,"column":8,"nodeType":"121","messageId":"122","endLine":15,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":33,"column":9,"nodeType":"171","messageId":"153","endLine":33,"endColumn":14},{"ruleId":"119","severity":1,"message":"172","line":50,"column":12,"nodeType":"121","messageId":"122","endLine":50,"endColumn":16},{"ruleId":"119","severity":1,"message":"173","line":62,"column":11,"nodeType":"121","messageId":"122","endLine":62,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":22},{"ruleId":"119","severity":1,"message":"123","line":4,"column":36,"nodeType":"121","messageId":"122","endLine":4,"endColumn":41},{"ruleId":"119","severity":1,"message":"174","line":15,"column":8,"nodeType":"121","messageId":"122","endLine":15,"endColumn":25},{"ruleId":"119","severity":1,"message":"175","line":73,"column":10,"nodeType":"121","messageId":"122","endLine":73,"endColumn":18},{"ruleId":"119","severity":1,"message":"176","line":11,"column":8,"nodeType":"121","messageId":"122","endLine":11,"endColumn":17},"no-unused-vars","'createStyles' is defined but never used.","Identifier","unusedVar","'Theme' is defined but never used.","'UpdatePatientForm' is defined but never used.","'DeleteButton' is defined but never used.","'Icon' is defined but never used.","'Redirect' is defined but never used.","'sizing' is defined but never used.","'vsmData' is assigned a value but never used.","'setVsmData' is assigned a value but never used.","'redirectToUpdate' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPatient'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [bed] as a second argument to the useEffect Hook.",["177"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-native-reassign",["178"],"no-negated-in-lhs",["179"],["178"],["179"],"'Link' is defined but never used.","'onChange' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["180"],"'Card' is defined but never used.","'Button' is defined but never used.","'Edit' is defined but never used.","'setData' is assigned a value but never used.",["181"],["178"],["179"],"'MenuIcon' is defined but never used.","'AccountCircle' is defined but never used.","'ArrowBackIcon' is defined but never used.","'NavLink' is defined but never used.","'Grid' is defined but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'DialogContentText' is defined but never used.","'formData' is assigned a value but never used.","'TextField' is defined but never used.",{"desc":"182","fix":"183"},"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},"Add dependencies array: [bed]",{"range":"187","text":"188"},"Update the dependencies array to be: [data]",{"range":"189","text":"190"},{"range":"191","text":"190"},[2974,2974],", [bed]",[1460,1462],"[data]",[2582,2584]]