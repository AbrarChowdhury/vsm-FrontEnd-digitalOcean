[{"E:\\BIOFORGE S\\VSM\\front-end\\src\\reportWebVitals.js":"1","E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\NavBar\\Navbar.js":"2","E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\cards\\card\\card.component.jsx":"3","E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\patient\\patient.component.jsx":"4","E:\\BIOFORGE S\\VSM\\front-end\\src\\pages\\dashboard\\dashboard.js":"5","E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\cards\\cards.component.jsx":"6","E:\\BIOFORGE S\\VSM\\front-end\\src\\App.js":"7","E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\patient\\updatePatientForm.component.jsx":"8","E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\chart\\chart.component.jsx":"9","E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\index.js":"10","E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\chart\\chart.config.js":"11","E:\\BIOFORGE S\\VSM\\front-end\\src\\index.js":"12","E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\patient\\RemovePatientForm.component.js":"13","E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\deleteButton\\deleteButton.jsx":"14","E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\patient\\addPatientForm.component.jsx":"15","E:\\BIOFORGE S\\VSM\\front-end\\src\\context\\api.context.js":"16","E:\\BIOFORGE S\\VSM\\front-end\\src\\pages\\landingPage\\landingPage.component.jsx":"17"},{"size":375,"mtime":1612419444566,"results":"18","hashOfConfig":"19"},{"size":3644,"mtime":1613739866032,"results":"20","hashOfConfig":"19"},{"size":8060,"mtime":1613408111126,"results":"21","hashOfConfig":"19"},{"size":6089,"mtime":1613735463744,"results":"22","hashOfConfig":"19"},{"size":294,"mtime":1612424685326,"results":"23","hashOfConfig":"19"},{"size":1164,"mtime":1613119805124,"results":"24","hashOfConfig":"19"},{"size":1271,"mtime":1613396453076,"results":"25","hashOfConfig":"19"},{"size":12246,"mtime":1612419532862,"results":"26","hashOfConfig":"19"},{"size":1260,"mtime":1612704281863,"results":"27","hashOfConfig":"19"},{"size":209,"mtime":1612419532860,"results":"28","hashOfConfig":"19"},{"size":629,"mtime":1612703906397,"results":"29","hashOfConfig":"19"},{"size":517,"mtime":1612419444565,"results":"30","hashOfConfig":"19"},{"size":4632,"mtime":1612880812965,"results":"31","hashOfConfig":"19"},{"size":381,"mtime":1612419444563,"results":"32","hashOfConfig":"19"},{"size":6515,"mtime":1612877097670,"results":"33","hashOfConfig":"19"},{"size":86,"mtime":1613025920045,"results":"34","hashOfConfig":"19"},{"size":241,"mtime":1612419532863,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"u9qtiu",{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"E:\\BIOFORGE S\\VSM\\front-end\\src\\reportWebVitals.js",[],["79","80"],"E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\NavBar\\Navbar.js",["81","82","83","84","85","86","87","88"],"E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\cards\\card\\card.component.jsx",["89","90","91","92","93","94","95","96","97"],"import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chart from '../../chart/chart.component'\r\nimport './card.styles.scss'\r\nimport Button from '@material-ui/core/Button'\r\nimport Edit from '@material-ui/icons/Edit'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { Typography } from '@material-ui/core'\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport api from '../../../context/api.context'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    chartBox: {\r\n        //margin: '10px 10px 0px 10px',\r\n        // paddingBottom: '40px',\r\n        background: '#0A081A',\r\n        cursor: 'pointer'\r\n    },\r\n    textHeader: {\r\n        color: '#64D7EB'\r\n    },\r\n    textHeader1: {\r\n        margin: '0px 30px 00px 00px',\r\n\r\n    },\r\n    textBody: {\r\n        color: '#FFFFFF'\r\n    },\r\n    chartText: {\r\n        // marginBottom:'50px',\r\n        padding: '10px 20px 10px 20px'\r\n    },\r\n    chart: {\r\n        padding: '0px 15px 15px 15px'\r\n    },\r\n    button: {\r\n        marginLeft: '20px',\r\n        padding: '05px 20px 05px 20px',\r\n        backgroundColor: \"#FFFFFF\"\r\n    },\r\n    ecgTexts: {\r\n        paddingLeft: '5px'\r\n    },\r\n    greenHeaders: {\r\n        color: \"#5FFF2D\",\r\n        fontSize: '1rem'\r\n    },\r\n    greenHeadersNumbers: {\r\n        color: \"#5FFF2D\",\r\n        textAlign: 'center',\r\n        fontSize: '2rem',\r\n        paddingTop: '30px'\r\n\r\n    },\r\n    greenBottoms: {\r\n        color: \"#5FFF2D\",\r\n        paddingTop: '20px'\r\n    },\r\n    purpleHeader: {\r\n        fontSize: '1.2rem',\r\n        color: '#FF1EFD',\r\n\r\n    },\r\n    blueHeaders: {\r\n        fontSize: '0.9rem',\r\n        color: '#00E5FF',\r\n    },\r\n    blueHeadersNumbers: {\r\n        paddingTop: '10px',\r\n        color: \"#00E5FF\",\r\n        textAlign: 'center',\r\n        fontSize: '1.5rem',\r\n\r\n    },\r\n    blueBottoms: {\r\n        color: \"#00E5FF\",\r\n        paddingTop: '15px',\r\n        fontSize: '0.9rem',\r\n    },\r\n    notificationIcon: {\r\n        margin: '2px 10px 00px 00px',\r\n        color: '#FFFFFF'\r\n    },\r\n    maxHeight: {\r\n        padding: '20px',\r\n        height: '25%'\r\n    }\r\n})\r\n\r\n)\r\nconst ENDPOINT = `http://${api}/`;\r\nconst wss = new WebSocket(`ws://${api}`);\r\nfunction Card({ bed }) {\r\n    const classes = useStyles()\r\n    let history = useHistory()\r\n    const [patientData, setPatientData] = useState({})\r\n    const [temp, setTemp]=useState([0])\r\n    const [heartRate, setHeartRate]=useState([0])\r\n    const [ecg, setEcg]=useState([0])\r\n    const [spo2, setSpo2]=useState([0])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${ENDPOINT}patient/${bed}`)\r\n        .then((response)=>{\r\n            console.log(response.data)\r\n            if(response.data){\r\n                setPatientData(response.data)\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error)\r\n        })\r\n        wss.addEventListener('message', (message) => {\r\n            if(JSON.parse(message.data).bedNumber==bed){\r\n                // console.log(\"hoise: \", JSON.parse(message.data))\r\n                setTemp(JSON.parse(message.data).temp)\r\n                setHeartRate(JSON.parse(message.data).heartRate)\r\n                setEcg(JSON.parse(message.data).ecg)\r\n                setSpo2(JSON.parse(message.data).spo2)\r\n                // console.log(temp)\r\n            } \r\n        });\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"Card\">\r\n        <div className={classes.chartBox} >\r\n\r\n            <div className={classes.chartText}>\r\n                <Grid container xs={12}>\r\n                    <Grid item xs={2} className={classes.textHeader1}>\r\n                        <Typography variant=\"subtitle\" className={classes.textHeader}>Bed No:</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={3} className={classes.textHeader1}>\r\n                        <Typography variant=\"subtitle\" className={classes.textHeader}>Patient Name:</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={1} className={classes.textHeader1}>\r\n                        <Typography variant=\"subtitle\" className={classes.textHeader}>Age:</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={1} className={classes.textHeader1}>\r\n                        <Typography variant=\"subtitle\" className={classes.textHeader}>Sex:</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={1} className={classes.textHeader1}>\r\n                        <Typography variant=\"subtitle\" className={classes.textHeader}>Temp:</Typography>\r\n\r\n\r\n                    </Grid>\r\n\r\n                    <NotificationsActiveIcon className={classes.notificationIcon}></NotificationsActiveIcon>\r\n                    <Grid item xs={2} style={{ marginRight: '30px' }}>\r\n                        <Typography variant=\"subtitle\" className={classes.textBody}>{bed}</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={3} style={{ marginRight: '32px' }}>\r\n                        <Typography variant=\"subtitle\" className={classes.textBody}>{patientData.name}</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={1} style={{ marginRight: '30px' }}>\r\n                        <Typography variant=\"subtitle\" className={classes.textBody}>{patientData.age}</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={1} style={{ marginRight: '30px' }}>\r\n                        <Typography variant=\"subtitle\" className={classes.textBody}>{patientData.sex}</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <Typography variant=\"subtitle\" className={classes.textBody}>{temp[temp.length-1]}</Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n\r\n\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n            </div>\r\n\r\n            <div className={classes.chart}>\r\n                <Grid container xs={12}>\r\n                    <Grid item xs={10} >\r\n                        <div className=\"padding-right-large\">\r\n                        <Chart bed={bed}/>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <div className=\"green hr-grid\">\r\n                            <Typography className=\"title\" variant=\"p\">HR</Typography>\r\n                            <Typography className=\"upper\" variant=\"p\">150</Typography>\r\n                            <Typography className=\"lower\" variant=\"p\">50</Typography>\r\n                            <Typography className=\"hr\" variant=\"h2\">{heartRate[heartRate.length-1]}</Typography>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container xs={12}>\r\n                    <Grid item xs={12}><Typography variant=\"h6\" style={{ paddingTop: '10px', paddingBottom: \"10px\" }} className={classes.textHeader} >PLETH</Typography></Grid>\r\n                    <Grid item xs={10} >\r\n                        <div className=\"padding-right-large\">\r\n                            <Chart bed={bed}/>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                        <div className=\"side-by-side blue\">\r\n                            <Typography variant=\"h6\">Sp02</Typography>\r\n                            <Typography variant=\"h3\">{spo2[spo2.length-1]}</Typography>\r\n                        </div>\r\n                        <div className=\"side-by-side blue\">    \r\n                            <Typography variant=\"h6\">Pulse</Typography>\r\n                            <Typography variant=\"h3\">{ecg[ecg.length-1]}</Typography>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\patient\\patient.component.jsx",["98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"E:\\BIOFORGE S\\VSM\\front-end\\src\\pages\\dashboard\\dashboard.js",[],["112","113"],"E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\cards\\cards.component.jsx",["114","115","116","117"],"E:\\BIOFORGE S\\VSM\\front-end\\src\\App.js",[],"E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\patient\\updatePatientForm.component.jsx",["118","119","120","121","122","123","124","125","126","127"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport DeleteButton from \"../deleteButton/deleteButton\"\r\nimport './patient.styles.scss'\r\nimport Chart from '../chart/chart.component'\r\nimport Navbar from '../NavBar/Navbar'\r\nimport { TextField, Typography } from '@material-ui/core'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Edit from '@material-ui/icons/Edit'\r\nimport { sizing } from '@material-ui/system';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport io from \"socket.io-client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n\r\n  },\r\n  chartBox: {\r\n    margin: '20px 20px 0px 20px',\r\n    // paddingBottom: '40px',\r\n    background: '#0A081A',\r\n    maxHeight: '840px'\r\n  },\r\n  textHeader: {\r\n    color: '#64D7EB'\r\n  },\r\n  textHeader1: {\r\n    margin: '0px 80px 00px 00px',\r\n\r\n  },\r\n  textBody: {\r\n    color: '#FFFFFF'\r\n  },\r\n  chartText: {\r\n    // marginBottom:'50px',\r\n    padding: '40px'\r\n  },\r\n  chart: {\r\n    padding: '20px 40px 40px 40px'\r\n  },\r\n  button: {\r\n\r\n    width: '100px',\r\n    margin: '10px 10px 0px 0px',\r\n    // marginRight: '60px',\r\n    // padding: '05px 20px 05px 20px',\r\n    backgroundColor: \"#FFFFFF\",\r\n    color: '#64D7EB',\r\n  },\r\n  buttonCancel: {\r\n    background: '#91989A',\r\n    '&:hover': {\r\n      backgroundColor: '#91989A',\r\n    },\r\n    color: 'white',\r\n    width: '100px',\r\n    margin: '10px 10px 0px 0px',\r\n    // marginRight: '60px',\r\n    // padding: '05px 20px 05px 20px',\r\n\r\n  },\r\n  ecgTexts: {\r\n    paddingLeft: '20px'\r\n  },\r\n  greenHeaders: {\r\n    color: \"#5FFF2D\",\r\n  },\r\n  greenHeadersNumbers: {\r\n    color: \"#5FFF2D\",\r\n    textAlign: 'center',\r\n    fontSize: '5rem',\r\n    paddingTop: '60px'\r\n\r\n  },\r\n  greenBottoms: {\r\n    color: \"#5FFF2D\",\r\n    paddingTop: '70px'\r\n  },\r\n  purpleHeader: {\r\n    color: '#FF1EFD'\r\n  },\r\n  blueHeaders: {\r\n    color: '#00E5FF',\r\n  },\r\n  blueHeadersNumbers: {\r\n    color: \"#00E5FF\",\r\n    textAlign: 'center',\r\n    // fontSize:'5rem',\r\n\r\n  },\r\n  blueBottoms: {\r\n    color: \"#00E5FF\",\r\n    paddingTop: '40px'\r\n  },\r\n  arrowIcon: {\r\n    fontSize: '6rem',\r\n    color: \"#FF1EFD\"\r\n  },\r\n  bottomGraphs: {\r\n    justifyContent: 'center',\r\n    paddingTop: '30px'\r\n  },\r\n  input: {\r\n    width: '140px',\r\n    color: \"white\",\r\n    '& fieldset': {\r\n      borderColor: '#64D7EB',\r\n      borderWidth: \"0.5px\",\r\n    },\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n})\r\n\r\n)\r\n\r\nconst ENDPOINT = 'http://localhost:5000';\r\nlet socket;\r\n\r\n\r\nfunction UpdatePatientForm({ name, age, sex }) {\r\n\r\n  const classes = useStyles()\r\n  let { bed } = useParams();\r\n\r\n  const initialState = { name: name,  age: age, sex: sex }\r\n\r\n  const [formData, setFormData] = useState(initialState)\r\n  const [patient, setPatient] = useState({})\r\n\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT)\r\n    console.log(bed)\r\n\r\n    axios.get(`http://localhost:5000/patient/${bed}`)\r\n      .then(function (response) {\r\n        console.log(\"hello\");\r\n        console.log(response.data);\r\n        setPatient(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"hello\");\r\n        console.log(error);\r\n      });\r\n\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    socket.on('message', (message) => {\r\n      console.log(message)\r\n    })\r\n  }, [])\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(\"formData: \", formData)\r\n\r\n    axios.put(`http://localhost:5000/patient/${bed}`, formData)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setFormData({ ...formData, [name]: value })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Navbar></Navbar>\r\n\r\n\r\n        <div className={classes.chartBox}>\r\n\r\n          <div className={classes.chartText}>\r\n            <Grid container xs={12}>\r\n              <Grid item xs={1} className={classes.textHeader1}>\r\n                <Typography variant=\"h6\" className={classes.textHeader}>Bed No: </Typography>\r\n                <TextField variant=\"outlined\" InputProps={{ className: classes.input }} value={patient.bed}></TextField>\r\n             \r\n              </Grid>\r\n              <Grid item xs={1} className={classes.textHeader1}>\r\n                <Typography variant=\"h6\" className={classes.textHeader}>Patient Name:</Typography>\r\n                <TextField variant=\"outlined\" InputProps={{ className: classes.input }} value={patient.name}></TextField>\r\n                \r\n              </Grid>\r\n              <Grid item xs={1} className={classes.textHeader1}>\r\n                <Typography variant=\"h6\" className={classes.textHeader}>Age:</Typography>\r\n                <TextField variant=\"outlined\" InputProps={{ className: classes.input }} value={patient.age}></TextField>\r\n               \r\n              </Grid>\r\n              <Grid item xs={1} className={classes.textHeader1}>\r\n                <Typography variant=\"h6\" className={classes.textHeader}>Sex:</Typography>\r\n                <TextField variant=\"outlined\" InputProps={{ className: classes.input }} value={patient.sex}></TextField>\r\n               \r\n              </Grid>\r\n              <Grid item xs={1} className={classes.textHeader1}>\r\n                <Typography variant=\"h6\" className={classes.textHeader}>Temp:</Typography>\r\n                <TextField variant=\"outlined\" InputProps={{ className: classes.input }} value={patient.age}></TextField>\r\n             \r\n              </Grid>\r\n              <Grid item xs={1} className={classes.textHeader1}>\r\n                <Typography variant=\"h6\" className={classes.textHeader}>Admission-date:</Typography>\r\n                <TextField variant=\"outlined\" InputProps={{ className: classes.input }} value={\"22/11/2020\"}></TextField>\r\n\r\n              </Grid>\r\n              <Grid item xs={1} style={{ maxWidth: '80px' }} className={classes.textHeader1}>\r\n                <Typography variant=\"h6\" className={classes.textHeader}>Diagnosis:</Typography>\r\n                <TextField variant=\"outlined\" InputProps={{ className: classes.input }} value={\"22/11/2020\"}></TextField>\r\n\r\n\r\n              </Grid>\r\n\r\n\r\n\r\n              <Link style={{ textDecoration: 'none' }} to={'/' + patient.bed}>\r\n                <Button variant=\"contained\" className={classes.button} >Save </Button>\r\n              </Link>\r\n              <Link style={{ textDecoration: 'none' }} to={'/' + patient.bed}>\r\n                <Button variant=\"contained\" className={classes.buttonCancel} >Cancel </Button>\r\n              </Link>\r\n\r\n\r\n              {/* <Grid item xs={6}>\r\n                            <UpdatePatientForm name={patient.name} age={patient.age} sex={patient.sex} bed={patient.bed} />\r\n                        </Grid> */}\r\n              {/* <Grid item xs={6}>\r\n                            <DeleteButton bed={bed} />\r\n                        </Grid> */}\r\n              {/* <Grid item xs={6}>\r\n                            <Typography variant=\"h5\" className={classes.text}>Admission-date: {\"22/12/2020\"}</Typography>\r\n                        </Grid> */}\r\n\r\n            </Grid>\r\n          </div>\r\n\r\n          <div className={classes.chart}>\r\n            <Grid container xs={12}>\r\n              <Grid item xs={9}>\r\n                <Chart />\r\n                <Typography variant=\"h6\" style={{ paddingTop: '30px', paddingBottom: \"30px\" }} className={classes.textHeader} >PLETH</Typography>\r\n                <Chart />\r\n              </Grid>\r\n\r\n\r\n              <Grid item className={classes.ecgTexts} container spacing={1} xs={3}>\r\n\r\n                <Grid item xs={1}>\r\n                  <Typography variant=\"h5\" className={classes.greenHeaders} >HR</Typography>\r\n                  <Typography variant=\"h5\" className={classes.greenHeaders} >150</Typography>\r\n                  <Typography variant=\"h5\" className={classes.greenBottoms} >50</Typography>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={5}>\r\n                  <Typography variant=\"h2\" className={classes.greenHeadersNumbers} >120</Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"h5\" className={classes.greenHeaders} >PVC</Typography>\r\n                  <Typography variant=\"h5\" className={classes.greenHeaders} >ST-I</Typography>\r\n                  <Typography variant=\"h5\" className={classes.greenBottoms} >ST-II</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"h5\" className={classes.greenHeaders} >0</Typography>\r\n                  <Typography variant=\"h5\" className={classes.greenHeaders} >?</Typography>\r\n                  <Typography variant=\"h5\" className={classes.greenBottoms} >-0.8</Typography>\r\n                </Grid>\r\n\r\n                <Grid item style={{ maxHeight: '10px' }} xs={12}>\r\n                  <Typography variant=\"h4\" className={classes.purpleHeader} >NBP 109/70 (79)</Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={1}>\r\n                  <Typography variant=\"h5\" className={classes.blueHeaders} >Sp02</Typography>\r\n\r\n                  <Typography variant=\"h5\" className={classes.blueBottoms} >Pulse</Typography>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={5}>\r\n                  <Typography variant=\"h3\" className={classes.blueHeadersNumbers} >120</Typography>\r\n                  <br></br>\r\n                  <Typography variant=\"h3\" className={classes.blueHeadersNumbers} >120</Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"h5\" className={classes.blueHeaders} >ST-III</Typography>\r\n                  <Typography variant=\"h5\" className={classes.blueHeaders} >ST-aVR</Typography>\r\n                  <Typography variant=\"h5\" className={classes.blueHeaders} >ST-aVL</Typography>\r\n                  <Typography variant=\"h5\" className={classes.blueHeaders} >ST-aVF</Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Typography variant=\"h5\" className={classes.blueHeaders} >?</Typography>\r\n                  <Typography variant=\"h5\" className={classes.blueHeaders} >?</Typography>\r\n                  <Typography variant=\"h5\" className={classes.blueHeaders} >?</Typography>\r\n                  <Typography variant=\"h5\" className={classes.blueHeaders} >?</Typography>\r\n                </Grid>\r\n\r\n              </Grid>\r\n\r\n\r\n              <Grid xl={12} className={classes.bottomGraphs} container spacing={3}>\r\n                <Grid item xl={1}>\r\n                  <ArrowLeftIcon className={classes.arrowIcon}></ArrowLeftIcon>\r\n                </Grid>\r\n                <Grid item xl={4} style={{ maxWidth: '360px', }} >\r\n                  <Chart />\r\n                </Grid>\r\n                <Grid item xl={4} style={{ maxWidth: '360px', }}>\r\n                  <Chart />\r\n                </Grid>\r\n                <Grid item xl={4} style={{ maxWidth: '360px', }}>\r\n                  <Chart />\r\n                </Grid>\r\n                <Grid item xl={4} style={{ maxWidth: '360px', }}>\r\n                  <Chart />\r\n                </Grid>\r\n                <Grid item xl={1}>\r\n                  <ArrowRightIcon className={classes.arrowIcon}></ArrowRightIcon>\r\n                </Grid>\r\n\r\n              </Grid>\r\n\r\n\r\n\r\n\r\n            </Grid>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </>\r\n    // <div>\r\n    //   <h1>Update patient info on bed {bed}</h1>\r\n    //   <form onSubmit={handleSubmit}>\r\n    //     <input type=\"text\" name=\"name\"  value={formData.name} onChange={handleChange}/>\r\n    //     <input type=\"text\" name=\"age\"  value={formData.age} onChange={handleChange}/>\r\n    //     <input type=\"text\" name=\"sex\"  value={formData.sex} onChange={handleChange}/>\r\n    //     <input type=\"submit\" name=\"button\"/>\r\n    //   </form> \r\n    // </div>\r\n  )\r\n}\r\n\r\nexport default UpdatePatientForm\r\n",["128","129"],"E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\chart\\chart.component.jsx",["130","131"],"E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\index.js",[],["132","133"],"E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\chart\\chart.config.js",[],"E:\\BIOFORGE S\\VSM\\front-end\\src\\index.js",[],["134","135"],"E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\patient\\RemovePatientForm.component.js",["136","137"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport Navbar from '../NavBar/Navbar'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core/'\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport api from '../../context/api.context'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n\r\n  },\r\n  container: {\r\n    margin: '20px 20px 0px 20px',\r\n  },\r\n  textHeader: {\r\n    textAlign: 'center',\r\n    color: '#64D7EB',\r\n    justifyContent: 'center',\r\n  },\r\n  buttons: {\r\n    alignSelf: 'center'\r\n  },\r\n\r\n  btn1: {\r\n    background: '#707070',\r\n    '&:hover': {\r\n      backgroundColor: '#707070',\r\n    },\r\n    color: 'white',\r\n    width: 140,\r\n\r\n  },\r\n  btn: {\r\n    background: 'linear-gradient(45deg, #55D0B3 30%, #64D7EB 90%)',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    width: 140,\r\n\r\n  },\r\n  dialogHeader: {\r\n    color: \"#707070\",\r\n    textAlign: 'center',\r\n  },\r\n  text: {\r\n\r\n    textAlign: 'center',\r\n\r\n  },\r\n\r\n})\r\n)\r\n\r\nfunction RemovePatientForm() {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [name, setName] = useState('')\r\n  const [open, setOpen] = useState(false);\r\n  const [bedIndex, setBedIndex] = useState('');\r\n\r\n  const data = [\r\n    { quarter: 1, earnings: 13000 },\r\n    { quarter: 2, earnings: 16500 },\r\n    { quarter: 3, earnings: 14250 },\r\n    { quarter: 4, earnings: 19000 },\r\n    { quarter: 5, earnings: 19000 },\r\n    { quarter: 6, earnings: 19000 },\r\n    { quarter: 7, earnings: 19000 },\r\n    { quarter: 8, earnings: 19000 },\r\n    { quarter: 9, earnings: 19000 },\r\n  ]\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    // axios.post('http://localhost:5000/patient', formData)\r\n    //   .then(function (response) {\r\n    //     console.log(response);\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     console.log(error);\r\n    //   });\r\n\r\n  }\r\n\r\n  const handleClickOpen = (index) => {\r\n    setOpen(true);\r\n    index = index + 1\r\n    setBedIndex(index)\r\n    axios.get(`http://${api}/patient/${index}`)\r\n      .then((response)=>{\r\n        console.log(response.data)\r\n        setName(response.data.name)\r\n      })\r\n      .catch((error)=>console.log(error))\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setBedIndex('')\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Navbar></Navbar>\r\n      <div className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          {data.map((elem, index) => (\r\n            <Grid item xs={12} sm={6} md={3} xl={4} key={data.indexOf(elem)}>\r\n              <Card >\r\n                <CardActionArea onClick={()=>handleClickOpen(index)} style={{ height: '250px' }} >\r\n                  <CardContent>\r\n                    <Typography className={classes.textHeader} variant=\"h5\" >\r\n                      - Remove\r\n                    </Typography>\r\n                    <Typography className={classes.textHeader} variant=\"h5\" >\r\n                      BED {index + 1}\r\n                    </Typography>\r\n\r\n                  </CardContent>\r\n                </CardActionArea>\r\n\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n\r\n      <Dialog open={open} onClose={handleClose} >\r\n        <DialogTitle className={classes.dialogHeader} >Create a Patient</DialogTitle>\r\n        <DialogContent>\r\n          <Typography className={classes.text} >\r\n            Do you wish to permanently remove bed {bedIndex}?\r\n            </Typography>\r\n            <Typography className={classes.text}>\r\n            It is being occupied by Rafat Islam.\r\n            </Typography>\r\n        </DialogContent>\r\n        <span className={classes.buttons}>\r\n          <DialogActions>\r\n            <Button className={classes.btn} onClick={handleClose} >\r\n              No\r\n          </Button>\r\n            <Button className={classes.btn1} onClick={handleSubmit} color=\"primary\">\r\n              Yes\r\n          </Button>\r\n          </DialogActions>\r\n        </span>\r\n      </Dialog>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RemovePatientForm\r\n",["138","139"],"E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\deleteButton\\deleteButton.jsx",[],"E:\\BIOFORGE S\\VSM\\front-end\\src\\components\\patient\\addPatientForm.component.jsx",["140","141","142","143"],"E:\\BIOFORGE S\\VSM\\front-end\\src\\context\\api.context.js",[],"E:\\BIOFORGE S\\VSM\\front-end\\src\\pages\\landingPage\\landingPage.component.jsx",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":18},{"ruleId":"148","severity":1,"message":"152","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":18},{"ruleId":"148","severity":1,"message":"153","line":10,"column":8,"nodeType":"150","messageId":"151","endLine":10,"endColumn":19},{"ruleId":"148","severity":1,"message":"154","line":12,"column":8,"nodeType":"150","messageId":"151","endLine":12,"endColumn":16},{"ruleId":"148","severity":1,"message":"155","line":18,"column":8,"nodeType":"150","messageId":"151","endLine":18,"endColumn":12},{"ruleId":"148","severity":1,"message":"156","line":19,"column":8,"nodeType":"150","messageId":"151","endLine":19,"endColumn":16},{"ruleId":"148","severity":1,"message":"157","line":22,"column":8,"nodeType":"150","messageId":"151","endLine":22,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":60,"column":5,"nodeType":"160","messageId":"161","endLine":81,"endColumn":11},{"ruleId":"148","severity":1,"message":"162","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":22},{"ruleId":"148","severity":1,"message":"163","line":4,"column":36,"nodeType":"150","messageId":"151","endLine":4,"endColumn":41},{"ruleId":"148","severity":1,"message":"164","line":8,"column":8,"nodeType":"150","messageId":"151","endLine":8,"endColumn":14},{"ruleId":"148","severity":1,"message":"165","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":12},{"ruleId":"148","severity":1,"message":"166","line":10,"column":10,"nodeType":"150","messageId":"151","endLine":10,"endColumn":18},{"ruleId":"148","severity":1,"message":"167","line":10,"column":20,"nodeType":"150","messageId":"151","endLine":10,"endColumn":24},{"ruleId":"148","severity":1,"message":"168","line":100,"column":9,"nodeType":"150","messageId":"151","endLine":100,"endColumn":16},{"ruleId":"169","severity":1,"message":"170","line":119,"column":50,"nodeType":"171","messageId":"172","endLine":119,"endColumn":52},{"ruleId":"173","severity":1,"message":"174","line":128,"column":7,"nodeType":"175","endLine":128,"endColumn":9,"suggestions":"176"},{"ruleId":"148","severity":1,"message":"177","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":13},{"ruleId":"148","severity":1,"message":"166","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":18},{"ruleId":"148","severity":1,"message":"167","line":9,"column":20,"nodeType":"150","messageId":"151","endLine":9,"endColumn":24},{"ruleId":"148","severity":1,"message":"178","line":21,"column":12,"nodeType":"150","messageId":"151","endLine":21,"endColumn":22},{"ruleId":"148","severity":1,"message":"179","line":21,"column":24,"nodeType":"150","messageId":"151","endLine":21,"endColumn":37},{"ruleId":"148","severity":1,"message":"180","line":22,"column":12,"nodeType":"150","messageId":"151","endLine":22,"endColumn":19},{"ruleId":"148","severity":1,"message":"181","line":22,"column":21,"nodeType":"150","messageId":"151","endLine":22,"endColumn":31},{"ruleId":"148","severity":1,"message":"182","line":23,"column":12,"nodeType":"150","messageId":"151","endLine":23,"endColumn":28},{"ruleId":"148","severity":1,"message":"183","line":23,"column":30,"nodeType":"150","messageId":"151","endLine":23,"endColumn":49},{"ruleId":"148","severity":1,"message":"184","line":25,"column":12,"nodeType":"150","messageId":"151","endLine":25,"endColumn":23},{"ruleId":"148","severity":1,"message":"185","line":25,"column":25,"nodeType":"150","messageId":"151","endLine":25,"endColumn":39},{"ruleId":"173","severity":1,"message":"186","line":31,"column":15,"nodeType":"187","endLine":46,"endColumn":6},{"ruleId":"169","severity":1,"message":"170","line":37,"column":50,"nodeType":"171","messageId":"172","endLine":37,"endColumn":52},{"ruleId":"173","severity":1,"message":"174","line":46,"column":7,"nodeType":"175","endLine":46,"endColumn":9,"suggestions":"188"},{"ruleId":"144","replacedBy":"189"},{"ruleId":"146","replacedBy":"190"},{"ruleId":"148","severity":1,"message":"191","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"192","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"162","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":22},{"ruleId":"148","severity":1,"message":"163","line":3,"column":36,"nodeType":"150","messageId":"151","endLine":3,"endColumn":41},{"ruleId":"148","severity":1,"message":"162","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":22},{"ruleId":"148","severity":1,"message":"163","line":5,"column":36,"nodeType":"150","messageId":"151","endLine":5,"endColumn":41},{"ruleId":"148","severity":1,"message":"193","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":20},{"ruleId":"148","severity":1,"message":"194","line":11,"column":8,"nodeType":"150","messageId":"151","endLine":11,"endColumn":12},{"ruleId":"148","severity":1,"message":"166","line":12,"column":10,"nodeType":"150","messageId":"151","endLine":12,"endColumn":18},{"ruleId":"148","severity":1,"message":"165","line":14,"column":8,"nodeType":"150","messageId":"151","endLine":14,"endColumn":12},{"ruleId":"148","severity":1,"message":"195","line":15,"column":10,"nodeType":"150","messageId":"151","endLine":15,"endColumn":16},{"ruleId":"173","severity":1,"message":"174","line":158,"column":6,"nodeType":"175","endLine":158,"endColumn":8,"suggestions":"196"},{"ruleId":"148","severity":1,"message":"197","line":167,"column":9,"nodeType":"150","messageId":"151","endLine":167,"endColumn":21},{"ruleId":"148","severity":1,"message":"198","line":180,"column":9,"nodeType":"150","messageId":"151","endLine":180,"endColumn":21},{"ruleId":"144","replacedBy":"199"},{"ruleId":"146","replacedBy":"200"},{"ruleId":"169","severity":1,"message":"170","line":12,"column":50,"nodeType":"171","messageId":"172","endLine":12,"endColumn":52},{"ruleId":"173","severity":1,"message":"201","line":18,"column":7,"nodeType":"175","endLine":18,"endColumn":9,"suggestions":"202"},{"ruleId":"144","replacedBy":"203"},{"ruleId":"146","replacedBy":"204"},{"ruleId":"144","replacedBy":"205"},{"ruleId":"146","replacedBy":"206"},{"ruleId":"148","severity":1,"message":"207","line":11,"column":8,"nodeType":"150","messageId":"151","endLine":11,"endColumn":17},{"ruleId":"148","severity":1,"message":"208","line":70,"column":10,"nodeType":"150","messageId":"151","endLine":70,"endColumn":14},{"ruleId":"144","replacedBy":"209"},{"ruleId":"146","replacedBy":"210"},{"ruleId":"148","severity":1,"message":"162","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":22},{"ruleId":"148","severity":1,"message":"163","line":4,"column":36,"nodeType":"150","messageId":"151","endLine":4,"endColumn":41},{"ruleId":"148","severity":1,"message":"211","line":15,"column":8,"nodeType":"150","messageId":"151","endLine":15,"endColumn":25},{"ruleId":"148","severity":1,"message":"212","line":73,"column":10,"nodeType":"150","messageId":"151","endLine":73,"endColumn":18},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'PhotoCamera' is defined but never used.","'MenuItem' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'createStyles' is defined but never used.","'Theme' is defined but never used.","'Button' is defined but never used.","'Edit' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bed'. Either include it or remove the dependency array.","ArrayExpression",["215"],"'Chart' is defined but never used.","'inputValue' is assigned a value but never used.","'setInputValue' is assigned a value but never used.","'vsmData' is assigned a value but never used.","'setVsmData' is assigned a value but never used.","'redirectToUpdate' is assigned a value but never used.","'setRedirectToUpdate' is assigned a value but never used.","'patientData' is assigned a value but never used.","'setPatientData' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["216"],["213"],["214"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'DeleteButton' is defined but never used.","'Icon' is defined but never used.","'sizing' is defined but never used.",["217"],"'handleSubmit' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["213"],["214"],"React Hook useEffect has missing dependencies: 'bed' and 'ecg'. Either include them or remove the dependency array.",["218"],["213"],["214"],["213"],["214"],"'TextField' is defined but never used.","'name' is assigned a value but never used.",["213"],["214"],"'DialogContentText' is defined but never used.","'formData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"219","fix":"221"},{"desc":"219","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [bed]",{"range":"225","text":"226"},{"range":"227","text":"226"},{"range":"228","text":"226"},"Update the dependencies array to be: [bed, ecg]",{"range":"229","text":"230"},[3542,3544],"[bed]",[1834,1836],[3443,3445],[651,653],"[bed, ecg]"]