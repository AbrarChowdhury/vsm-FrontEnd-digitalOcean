[{"D:\\Work\\BioForge\\vsm-front-end\\src\\index.js":"1","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\patient.component.jsx":"2","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\index.js":"3","D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\landingPage\\landingPage.component.jsx":"4","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\sign-In-form\\signInForm.component.jsx":"5","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\card\\card.component.jsx":"6","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\cards.component.jsx":"7","D:\\Work\\BioForge\\vsm-front-end\\src\\App.js":"8","D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\dashboard\\dashboard.js":"9","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\NavBar\\Navbar.js":"10","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\deleteButton\\deleteButton.jsx":"11","D:\\Work\\BioForge\\vsm-front-end\\src\\reportWebVitals.js":"12","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\chart\\chart.config.js":"13","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\chart\\chart.component.jsx":"14","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\updatePatientForm.component.jsx":"15"},{"size":517,"mtime":1610342729179,"results":"16","hashOfConfig":"17"},{"size":3635,"mtime":1610438177046,"results":"18","hashOfConfig":"17"},{"size":209,"mtime":1610344097957,"results":"19","hashOfConfig":"17"},{"size":241,"mtime":1610346468712,"results":"20","hashOfConfig":"17"},{"size":7073,"mtime":1610439088173,"results":"21","hashOfConfig":"17"},{"size":1601,"mtime":1610432797766,"results":"22","hashOfConfig":"17"},{"size":1768,"mtime":1610435911256,"results":"23","hashOfConfig":"17"},{"size":883,"mtime":1610439212032,"results":"24","hashOfConfig":"17"},{"size":381,"mtime":1610345200628,"results":"25","hashOfConfig":"17"},{"size":2468,"mtime":1610430861869,"results":"26","hashOfConfig":"17"},{"size":381,"mtime":1610342729174,"results":"27","hashOfConfig":"17"},{"size":375,"mtime":1610342729185,"results":"28","hashOfConfig":"17"},{"size":547,"mtime":1610342729173,"results":"29","hashOfConfig":"17"},{"size":816,"mtime":1610439745367,"results":"30","hashOfConfig":"17"},{"size":1278,"mtime":1610439217559,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1cxrmgn",{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\BioForge\\vsm-front-end\\src\\index.js",[],["69","70"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\patient.component.jsx",["71","72","73","74","75","76","77","78","79"],"import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport UpdatePatientForm from '../updatePatientForm/updatePatientForm.component'\r\nimport io from \"socket.io-client\";\r\nimport DeleteButton from \"../deleteButton/deleteButton\"\r\nimport './patient.styles.scss'\r\nimport Chart from '../chart/chart.component'\r\nimport axios from 'axios'\r\nimport Navbar from '../NavBar/Navbar'\r\n\r\nconst ENDPOINT = 'http://localhost:5000/';\r\nlet socket;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        flexGrow:1,\r\n        \r\n    },\r\n    chart: {\r\n        margin: '20px 20px 0px 20px',\r\n        // paddingBottom: '40px',\r\n        background: '#04139a',\r\n        maxHeight:'900px'\r\n\r\n\r\n    },\r\n\r\n\r\n\r\n})\r\n\r\n)\r\n\r\nfunction Patient() {\r\n    const classes = useStyles()\r\n    let { bed } = useParams();\r\n    const [patient, setPatient] = useState({})\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [vsmData, setVsmData] = useState('')\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"the value\", inputValue)\r\n        socket.emit('vsm', { inputValue })\r\n        setInputValue('')\r\n    }\r\n\r\n    useEffect(async () => {\r\n        const result = await axios(\r\n            `${ENDPOINT}patient/${bed}`,\r\n        );\r\n        setPatient(result.data);\r\n    });\r\n\r\n    useEffect(() => {\r\n        socket = io(ENDPOINT)\r\n        console.log('stateChanged')\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on('message', (message) => {\r\n            console.log(message)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Navbar></Navbar>\r\n\r\n\r\n                <div className={classes.chart}>\r\n                    <Grid container xl={12}>\r\n                        <Grid item xs={3}>\r\n                            <h1>Bed: {patient.bed}</h1>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <h2>Name: {patient.name}</h2>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <h2>Age: {patient.age}</h2>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <h2>Sex: {patient.sex}</h2>\r\n                        </Grid>\r\n                        {/* <Grid item xs={6}>\r\n                            <UpdatePatientForm name={patient.name} age={patient.age} sex={patient.sex} bed={patient.bed} />\r\n                        </Grid> */}\r\n                        <Grid item xs={6}>\r\n                            <DeleteButton bed={bed} />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <h2>Admission-date: {\"22/12/2020\"}</h2>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <h2>Sex: {patient.sex}</h2>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    <Chart />\r\n                    \r\n                </div>\r\n\r\n                {/* <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" name=\"input\" value={inputValue} onChange={handleChange} />\r\n                    <input type=\"submit\" name=\"button\" />\r\n                </form> */}\r\n\r\n                {/* <h1>Data: {vsmData}</h1> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Patient\r\n","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\index.js",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\landingPage\\landingPage.component.jsx",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\sign-In-form\\signInForm.component.jsx",["80","81","82","83","84","85","86","87","88","89"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\card\\card.component.jsx",["90","91"],"import React,{ useState, useEffect }  from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chart from '../../chart/chart.component'\r\nimport './card.styles.scss'\r\n\r\nfunction Card(props) {\r\n    const [data, setData] = useState(props.data)\r\n\r\n    let history = useHistory()\r\n    \r\n    const redirect = () => {\r\n        history.push(`/${data.bed}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n       console.log(data);\r\n       \r\n    }, [])\r\n    \r\n    \r\n    const Header = ()=>(\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={ 2 }>\r\n                <p className=\"white bold\">Bed: {data.bed}</p>\r\n            </Grid>\r\n            <Grid item xs={ 5 }>\r\n                <p className=\"white bold\">Name: {data.name}</p> \r\n            </Grid>\r\n            <Grid item xs={ 2 }>\r\n                <p className=\"white bold\">Age: {data.age}</p>\r\n            </Grid>\r\n            <Grid item xs={ 3 }>\r\n                <p className=\"white bold\">Sex: {data.sex}</p>    \r\n            </Grid>\r\n        </Grid>\r\n    )\r\n    return (\r\n        \r\n        <div className=\"Card\" onClick={redirect}>\r\n           <Header/> \r\n            <Grid container spacing={2}>\r\n                <Grid item xs={ 8 }>\r\n                    <Chart/>\r\n                </Grid>\r\n                <Grid item xs={ 4 }>\r\n                    <h2 className=\"green\" >Hr-120</h2>\r\n                    <h2 className=\"white\" >Temp-90</h2>\r\n                    <h2 className=\"blue\" >Spo2-500</h2>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\cards.component.jsx",["92","93","94","95","96","97","98","99"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport Card from './card/card.component'\r\nimport Grid from '@material-ui/core/Grid'\r\n// import data from '../../data'\r\nimport axios from 'axios'\r\nimport './cards.styles.scss'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '20px',\r\n    flexGrow: 1,\r\n  },\r\n\r\n\r\n\r\n})\r\n\r\n)\r\n\r\nfunction Cards() {\r\n  const classes = useStyles()\r\n  const [text, setText] = useState('')\r\n  const onChange = (q) => {\r\n    setText(q.toLowerCase())\r\n    console.log(text)\r\n  }\r\n\r\n  const [data, setData] = useState([{ bed: 1,_id:null }, { bed: 2 , _id:null }, { bed: 3, _id:null }, { bed: 4, _id:null }, { bed: 5, _id:null }, { bed: 6, _id:null }, { bed: 7, _id:null }, { bed: 8, _id:null }, { bed: 9, _id:null },])\r\n\r\n\r\n  useEffect(() => {\r\n   \r\n\r\n    axios.get(`http://localhost:5000/patient`)\r\n      .then(function (response) {\r\n\r\n        let arr = data\r\n\r\n        console.log(response.data)\r\n\r\n        response.data.map((responseData, index) => {\r\n          data.map((item, index) => {\r\n\r\n            if (responseData.bed == item.bed) {\r\n              arr[Number(item.bed) - 1] = responseData\r\n              setData(arr)\r\n\r\n            }\r\n          })\r\n        })\r\n        console.log(data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.data);\r\n      })\r\n  }, [])\r\n\r\n  \r\n  \r\n  \r\n  return (\r\n\r\n    <div className={classes.root}>\r\n\r\n      <Grid container>\r\n\r\n        {data.map((data,index) =>\r\n\r\n          <Grid key={index} item xs={4}>\r\n            <Card data={data} />\r\n          </Grid>\r\n        )}\r\n\r\n        \r\n      </Grid>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards\r\n","D:\\Work\\BioForge\\vsm-front-end\\src\\App.js",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\dashboard\\dashboard.js",["100"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\NavBar\\Navbar.js",["101","102","103","104","105","106","107","108","109","110"],"import React, { useState,useEffect } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport picture from '../../assets/Login.png'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    bigAvatar: {\r\n        margin: 'auto',\r\n        width: '50%',\r\n        width: '67px',\r\n        height: '67px'\r\n    },\r\n    link: {\r\n        marginRight: '10px'\r\n    }\r\n\r\n\r\n}))\r\n\r\nexport default function ButtonAppBar() {\r\n    const classes = useStyles();\r\n\r\n    const [personName, setPersonName] = useState()\r\n\r\n    useEffect(() => {\r\n\r\n        setPersonName(\"Dr. Sarder A. Nayeem\")\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\" style={{ background: 'linear-gradient(45deg, #55D0B3 30%, #64D7EB 90%)' }}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" className={classes.title} >\r\n                        VSM Dashboard\r\n                    </Typography>\r\n\r\n                    <MenuItem className={classes.link} component={Link} to={'/add-patient'}>Add Patient</MenuItem>\r\n                    <MenuItem className={classes.link} component={Link} to={'/add-patient'}>Remove Patient</MenuItem>\r\n\r\n                    <div className={classes.link}>\r\n                        <Typography style={{left:'300px'}}>Welcome</Typography>\r\n                        <Typography variant=\"h6\" >{personName}</Typography>\r\n                        <Typography variant=\"caption\" display=\"block\" component={Link} to={'/'}>Sign out</Typography>\r\n\r\n\r\n                    </div>\r\n\r\n                    <Avatar src={picture} className={classes.bigAvatar} />\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\deleteButton\\deleteButton.jsx",[],["111","112"],"D:\\Work\\BioForge\\vsm-front-end\\src\\reportWebVitals.js",[],["113","114"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\chart\\chart.config.js",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\chart\\chart.component.jsx",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\updatePatientForm.component.jsx",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":22},{"ruleId":"119","severity":1,"message":"123","line":4,"column":36,"nodeType":"121","messageId":"122","endLine":4,"endColumn":41},{"ruleId":"119","severity":1,"message":"124","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":25},{"ruleId":"119","severity":1,"message":"125","line":41,"column":12,"nodeType":"121","messageId":"122","endLine":41,"endColumn":19},{"ruleId":"119","severity":1,"message":"126","line":41,"column":21,"nodeType":"121","messageId":"122","endLine":41,"endColumn":31},{"ruleId":"119","severity":1,"message":"127","line":44,"column":11,"nodeType":"121","messageId":"122","endLine":44,"endColumn":23},{"ruleId":"119","severity":1,"message":"128","line":48,"column":11,"nodeType":"121","messageId":"122","endLine":48,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":55,"column":5,"nodeType":"121","endLine":55,"endColumn":14,"suggestions":"131"},{"ruleId":"129","severity":1,"message":"132","line":55,"column":15,"nodeType":"133","endLine":60,"endColumn":6},{"ruleId":"119","severity":1,"message":"120","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":22},{"ruleId":"119","severity":1,"message":"123","line":6,"column":36,"nodeType":"121","messageId":"122","endLine":6,"endColumn":41},{"ruleId":"119","severity":1,"message":"134","line":149,"column":13,"nodeType":"121","messageId":"122","endLine":149,"endColumn":21},{"ruleId":"119","severity":1,"message":"128","line":149,"column":23,"nodeType":"121","messageId":"122","endLine":149,"endColumn":35},{"ruleId":"119","severity":1,"message":"135","line":149,"column":44,"nodeType":"121","messageId":"122","endLine":149,"endColumn":50},{"ruleId":"119","severity":1,"message":"136","line":166,"column":17,"nodeType":"121","messageId":"122","endLine":166,"endColumn":25},{"ruleId":"119","severity":1,"message":"137","line":166,"column":27,"nodeType":"121","messageId":"122","endLine":166,"endColumn":35},{"ruleId":"138","severity":1,"message":"139","line":181,"column":25,"nodeType":"140","endLine":181,"endColumn":74},{"ruleId":"138","severity":1,"message":"139","line":190,"column":25,"nodeType":"140","endLine":190,"endColumn":76},{"ruleId":"138","severity":1,"message":"139","line":209,"column":25,"nodeType":"140","endLine":209,"endColumn":82},{"ruleId":"119","severity":1,"message":"141","line":8,"column":18,"nodeType":"121","messageId":"122","endLine":8,"endColumn":25},{"ruleId":"129","severity":1,"message":"142","line":19,"column":8,"nodeType":"143","endLine":19,"endColumn":10,"suggestions":"144"},{"ruleId":"119","severity":1,"message":"145","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":22},{"ruleId":"119","severity":1,"message":"123","line":3,"column":36,"nodeType":"121","messageId":"122","endLine":3,"endColumn":41},{"ruleId":"119","severity":1,"message":"146","line":25,"column":9,"nodeType":"121","messageId":"122","endLine":25,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":43,"column":49,"nodeType":"133","messageId":"149","endLine":43,"endColumn":51},{"ruleId":"147","severity":1,"message":"148","line":44,"column":34,"nodeType":"133","messageId":"149","endLine":44,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":46,"column":34,"nodeType":"152","messageId":"153","endLine":46,"endColumn":36},{"ruleId":"129","severity":1,"message":"142","line":58,"column":6,"nodeType":"143","endLine":58,"endColumn":8,"suggestions":"154"},{"ruleId":"119","severity":1,"message":"155","line":1,"column":10,"nodeType":"121","messageId":"122","endLine":1,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":22},{"ruleId":"119","severity":1,"message":"123","line":2,"column":36,"nodeType":"121","messageId":"122","endLine":2,"endColumn":41},{"ruleId":"119","severity":1,"message":"156","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":14},{"ruleId":"119","severity":1,"message":"157","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":18},{"ruleId":"119","severity":1,"message":"158","line":8,"column":8,"nodeType":"121","messageId":"122","endLine":8,"endColumn":16},{"ruleId":"119","severity":1,"message":"159","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":21},{"ruleId":"119","severity":1,"message":"160","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":21},{"ruleId":"119","severity":1,"message":"161","line":13,"column":16,"nodeType":"121","messageId":"122","endLine":13,"endColumn":23},{"ruleId":"119","severity":1,"message":"162","line":15,"column":8,"nodeType":"121","messageId":"122","endLine":15,"endColumn":12},{"ruleId":"163","severity":1,"message":"164","line":31,"column":9,"nodeType":"165","messageId":"153","endLine":31,"endColumn":14},{"ruleId":"115","replacedBy":"166"},{"ruleId":"117","replacedBy":"167"},{"ruleId":"115","replacedBy":"168"},{"ruleId":"117","replacedBy":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'createStyles' is defined but never used.","Identifier","unusedVar","'Theme' is defined but never used.","'UpdatePatientForm' is defined but never used.","'vsmData' is assigned a value but never used.","'setVsmData' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPatient'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [bed] as a second argument to the useEffect Hook.",["172"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'Link' is defined but never used.","'onChange' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["174"],"'Card' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'AccountCircle' is defined but never used.","'ArrowBackIcon' is defined but never used.","'NavLink' is defined but never used.","'Grid' is defined but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression",["170"],["171"],["170"],["171"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},"Add dependencies array: [bed]",{"range":"180","text":"181"},"Update the dependencies array to be: [data]",{"range":"182","text":"183"},{"range":"184","text":"183"},[1541,1541],", [bed]",[481,483],"[data]",[1454,1456]]