[{"D:\\Work\\BioForge\\vsm-front-end\\src\\index.js":"1","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\patient.component.jsx":"2","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\index.js":"3","D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\landingPage\\landingPage.component.jsx":"4","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\sign-In-form\\signInForm.component.jsx":"5","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\card\\card.component.jsx":"6","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\cards.component.jsx":"7","D:\\Work\\BioForge\\vsm-front-end\\src\\App.js":"8","D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\dashboard\\dashboard.js":"9","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\NavBar\\Navbar.js":"10","D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\addPatientForm\\addPatientForm.component.jsx":"11","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\deleteButton\\deleteButton.jsx":"12","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\updatePatientForm\\updatePatientForm.component.jsx":"13"},{"size":517,"mtime":1610342729179,"results":"14","hashOfConfig":"15"},{"size":2945,"mtime":1610342729175,"results":"16","hashOfConfig":"15"},{"size":209,"mtime":1610344097957,"results":"17","hashOfConfig":"15"},{"size":241,"mtime":1610346468712,"results":"18","hashOfConfig":"15"},{"size":7070,"mtime":1610358657199,"results":"19","hashOfConfig":"15"},{"size":1417,"mtime":1610343931154,"results":"20","hashOfConfig":"15"},{"size":1329,"mtime":1610344795211,"results":"21","hashOfConfig":"15"},{"size":885,"mtime":1610344643761,"results":"22","hashOfConfig":"15"},{"size":381,"mtime":1610345200628,"results":"23","hashOfConfig":"15"},{"size":1260,"mtime":1610345459620,"results":"24","hashOfConfig":"15"},{"size":1420,"mtime":1610342729183,"results":"25","hashOfConfig":"15"},{"size":381,"mtime":1610342729174,"results":"26","hashOfConfig":"15"},{"size":1278,"mtime":1610342729178,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1cxrmgn",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\BioForge\\vsm-front-end\\src\\index.js",[],["60","61"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\patient.component.jsx",["62","63","64"],"import React, {useState, useEffect} from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid'\r\nimport UpdatePatientForm from '../updatePatientForm/updatePatientForm.component'\r\nimport io from \"socket.io-client\";\r\nimport DeleteButton from \"../deleteButton/deleteButton\"\r\nimport './patient.styles.scss'\r\nimport Chart from '../chart/chart.component'\r\nimport axios from 'axios'\r\n\r\nconst ENDPOINT = 'http://localhost:5000/';\r\nlet socket;\r\n\r\n\r\nfunction Patient() {\r\n    let { bed } = useParams();\r\n    const [patient, setPatient]=useState({})\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [vsmData, setVsmData] = useState('')\r\n    \r\n    \r\n    const handleChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault() \r\n        console.log(\"the value\",inputValue)\r\n        socket.emit('vsm', {inputValue})          \r\n        setInputValue('')\r\n    }\r\n    \r\n    useEffect(async () => {\r\n        const result = await axios(\r\n            `${ENDPOINT}patient/${bed}`,\r\n        );\r\n        setPatient(result.data);\r\n    });\r\n    \r\n    useEffect(() => {\r\n        socket = io(ENDPOINT)  \r\n        console.log('stateChanged')  \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        socket.on('message',(message)=>{\r\n            console.log( message )\r\n        })\r\n    },[])\r\n    return (\r\n        <div>\r\n            <div className=\"info-grid\">\r\n            <Grid container>\r\n                <Grid item xs={3}>\r\n                    <h1>Bed: {patient.bed}</h1>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <h2>Name: {patient.name}</h2>    \r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <h2>Age: {patient.age}</h2>    \r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <h2>Sex: {patient.sex}</h2>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <UpdatePatientForm name={patient.name} age={patient.age} sex={patient.sex} bed= {patient.bed}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <DeleteButton bed={bed}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <h2>Admission-date: {\"22/12/2020\"}</h2>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <h2>Sex: {patient.sex}</h2>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n            \r\n            \r\n            \r\n            \r\n            <div className=\"chart-container\">\r\n                <Chart/>            \r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" name=\"input\" value={inputValue} onChange={handleChange}/>\r\n            <input type=\"submit\" name=\"button\"/>\r\n            </form>\r\n\r\n            <h1>Data: {vsmData}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Patient\r\n",["65","66"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\index.js",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\landingPage\\landingPage.component.jsx",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\sign-In-form\\signInForm.component.jsx",["67","68","69","70","71","72","73","74","75","76"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\card\\card.component.jsx",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\cards.component.jsx",["77"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Card from './card/card.component'\r\nimport Grid from '@material-ui/core/Grid'\r\n// import data from '../../data'\r\nimport axios from 'axios'\r\nimport './cards.styles.scss'\r\nfunction Cards() {\r\n  const [text, setText] = useState('')\r\n  const onChange = (q) => {\r\n    setText(q.toLowerCase())\r\n    console.log(text)\r\n  }\r\n  const [data, setData] = useState([])\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/patient`)\r\n      .then(function (response) {\r\n        const responseData = response.data;\r\n        setData(responseData)\r\n        console.log(responseData)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.data);\r\n      })\r\n  }, [])\r\n  return (\r\n    data.length > 0 ?\r\n      <div className=\"Cards\">\r\n        <h1>VSM Dashboard</h1>\r\n        <Link to=\"/add-patient\">Add Patient</Link>\r\n\r\n        <br />\r\n        <Grid container>\r\n          {data.map(data =>\r\n            <Grid item xs={4}>\r\n              <Card bed={data.bed} name={data.name} age={data.age} sex={data.sex} />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n\r\n      </div>\r\n      :\r\n      <div>\r\n        <h1>No Patients</h1>\r\n        <Link to=\"/add-patient\">Add Patient</Link>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Cards\r\n","D:\\Work\\BioForge\\vsm-front-end\\src\\App.js",[],["78","79"],"D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\dashboard\\dashboard.js",["80"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\NavBar\\Navbar.js",["81","82","83"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n}))\r\n\r\nexport default function ButtonAppBar() {\r\n      const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        {/* <MenuIcon /> */}\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title} >\r\n                        News\r\n          </Typography>\r\n                    {/* <Button color=\"inherit\">Login</Button> */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}","D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\addPatientForm\\addPatientForm.component.jsx",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\deleteButton\\deleteButton.jsx",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\updatePatientForm\\updatePatientForm.component.jsx",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":19,"column":21,"nodeType":"90","messageId":"91","endLine":19,"endColumn":31},{"ruleId":"92","severity":1,"message":"93","line":33,"column":5,"nodeType":"90","endLine":33,"endColumn":14,"suggestions":"94"},{"ruleId":"92","severity":1,"message":"95","line":33,"column":15,"nodeType":"96","endLine":38,"endColumn":6},{"ruleId":"84","replacedBy":"97"},{"ruleId":"86","replacedBy":"98"},{"ruleId":"88","severity":1,"message":"99","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":22},{"ruleId":"88","severity":1,"message":"100","line":6,"column":36,"nodeType":"90","messageId":"91","endLine":6,"endColumn":41},{"ruleId":"88","severity":1,"message":"101","line":148,"column":13,"nodeType":"90","messageId":"91","endLine":148,"endColumn":21},{"ruleId":"88","severity":1,"message":"102","line":148,"column":23,"nodeType":"90","messageId":"91","endLine":148,"endColumn":35},{"ruleId":"88","severity":1,"message":"103","line":148,"column":44,"nodeType":"90","messageId":"91","endLine":148,"endColumn":50},{"ruleId":"88","severity":1,"message":"104","line":165,"column":17,"nodeType":"90","messageId":"91","endLine":165,"endColumn":25},{"ruleId":"88","severity":1,"message":"105","line":165,"column":27,"nodeType":"90","messageId":"91","endLine":165,"endColumn":35},{"ruleId":"106","severity":1,"message":"107","line":180,"column":25,"nodeType":"108","endLine":180,"endColumn":74},{"ruleId":"106","severity":1,"message":"107","line":189,"column":25,"nodeType":"108","endLine":189,"endColumn":76},{"ruleId":"106","severity":1,"message":"107","line":208,"column":25,"nodeType":"108","endLine":208,"endColumn":82},{"ruleId":"88","severity":1,"message":"109","line":10,"column":9,"nodeType":"90","messageId":"91","endLine":10,"endColumn":17},{"ruleId":"84","replacedBy":"110"},{"ruleId":"86","replacedBy":"111"},{"ruleId":"88","severity":1,"message":"112","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":14},{"ruleId":"88","severity":1,"message":"99","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":22},{"ruleId":"88","severity":1,"message":"100","line":2,"column":36,"nodeType":"90","messageId":"91","endLine":2,"endColumn":41},{"ruleId":"88","severity":1,"message":"113","line":6,"column":8,"nodeType":"90","messageId":"91","endLine":6,"endColumn":14},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'setVsmData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPatient'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [bed] as a second argument to the useEffect Hook.",["116"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["114"],["115"],"'createStyles' is defined but never used.","'Theme' is defined but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'errors' is assigned a value but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'onChange' is assigned a value but never used.",["114"],["115"],"'Card' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Add dependencies array: [bed]",{"range":"119","text":"120"},[1136,1136],", [bed]"]