[{"D:\\Work\\BioForge\\vsm-front-end\\src\\index.js":"1","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\patient.component.jsx":"2","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\index.js":"3","D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\landingPage\\landingPage.component.jsx":"4","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\sign-In-form\\signInForm.component.jsx":"5","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\card\\card.component.jsx":"6","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\cards.component.jsx":"7","D:\\Work\\BioForge\\vsm-front-end\\src\\App.js":"8","D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\dashboard\\dashboard.js":"9","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\NavBar\\Navbar.js":"10"},{"size":517,"mtime":1610342729179,"results":"11","hashOfConfig":"12"},{"size":2945,"mtime":1610342729175,"results":"13","hashOfConfig":"12"},{"size":213,"mtime":1610344085195,"results":"14","hashOfConfig":"12"},{"size":271,"mtime":1610343709110,"results":"15","hashOfConfig":"12"},{"size":1096,"mtime":1610344288283,"results":"16","hashOfConfig":"12"},{"size":1417,"mtime":1610343931154,"results":"17","hashOfConfig":"12"},{"size":1329,"mtime":1610344795211,"results":"18","hashOfConfig":"12"},{"size":885,"mtime":1610344643761,"results":"19","hashOfConfig":"12"},{"size":381,"mtime":1610345200628,"results":"20","hashOfConfig":"12"},{"size":993,"mtime":1610345221441,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1cxrmgn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"D:\\Work\\BioForge\\vsm-front-end\\src\\index.js",[],["46","47"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\patient\\patient.component.jsx",["48","49","50"],"import React, {useState, useEffect} from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid'\r\nimport UpdatePatientForm from '../updatePatientForm/updatePatientForm.component'\r\nimport io from \"socket.io-client\";\r\nimport DeleteButton from \"../deleteButton/deleteButton\"\r\nimport './patient.styles.scss'\r\nimport Chart from '../chart/chart.component'\r\nimport axios from 'axios'\r\n\r\nconst ENDPOINT = 'http://localhost:5000/';\r\nlet socket;\r\n\r\n\r\nfunction Patient() {\r\n    let { bed } = useParams();\r\n    const [patient, setPatient]=useState({})\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [vsmData, setVsmData] = useState('')\r\n    \r\n    \r\n    const handleChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault() \r\n        console.log(\"the value\",inputValue)\r\n        socket.emit('vsm', {inputValue})          \r\n        setInputValue('')\r\n    }\r\n    \r\n    useEffect(async () => {\r\n        const result = await axios(\r\n            `${ENDPOINT}patient/${bed}`,\r\n        );\r\n        setPatient(result.data);\r\n    });\r\n    \r\n    useEffect(() => {\r\n        socket = io(ENDPOINT)  \r\n        console.log('stateChanged')  \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        socket.on('message',(message)=>{\r\n            console.log( message )\r\n        })\r\n    },[])\r\n    return (\r\n        <div>\r\n            <div className=\"info-grid\">\r\n            <Grid container>\r\n                <Grid item xs={3}>\r\n                    <h1>Bed: {patient.bed}</h1>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <h2>Name: {patient.name}</h2>    \r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <h2>Age: {patient.age}</h2>    \r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <h2>Sex: {patient.sex}</h2>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <UpdatePatientForm name={patient.name} age={patient.age} sex={patient.sex} bed= {patient.bed}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <DeleteButton bed={bed}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <h2>Admission-date: {\"22/12/2020\"}</h2>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <h2>Sex: {patient.sex}</h2>\r\n                </Grid>\r\n            </Grid>\r\n            </div>\r\n            \r\n            \r\n            \r\n            \r\n            <div className=\"chart-container\">\r\n                <Chart/>            \r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" name=\"input\" value={inputValue} onChange={handleChange}/>\r\n            <input type=\"submit\" name=\"button\"/>\r\n            </form>\r\n\r\n            <h1>Data: {vsmData}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Patient\r\n","D:\\Work\\BioForge\\vsm-front-end\\src\\components\\index.js",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\landingPage\\landingPage.component.jsx",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\sign-In-form\\signInForm.component.jsx",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\card\\card.component.jsx",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\cards\\cards.component.jsx",["51"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Card from './card/card.component'\r\nimport Grid from '@material-ui/core/Grid'\r\n// import data from '../../data'\r\nimport axios from 'axios'\r\nimport './cards.styles.scss'\r\nfunction Cards() {\r\n  const [text, setText] = useState('')\r\n  const onChange = (q) => {\r\n    setText(q.toLowerCase())\r\n    console.log(text)\r\n  }\r\n  const [data, setData] = useState([])\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/patient`)\r\n      .then(function (response) {\r\n        const responseData = response.data;\r\n        setData(responseData)\r\n        console.log(responseData)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error.data);\r\n      })\r\n  }, [])\r\n  return (\r\n    data.length > 0 ?\r\n      <div className=\"Cards\">\r\n        <h1>VSM Dashboard</h1>\r\n        <Link to=\"/add-patient\">Add Patient</Link>\r\n\r\n        <br />\r\n        <Grid container>\r\n          {data.map(data =>\r\n            <Grid item xs={4}>\r\n              <Card bed={data.bed} name={data.name} age={data.age} sex={data.sex} />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n\r\n\r\n      </div>\r\n      :\r\n      <div>\r\n        <h1>No Patients</h1>\r\n        <Link to=\"/add-patient\">Add Patient</Link>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Cards\r\n","D:\\Work\\BioForge\\vsm-front-end\\src\\App.js",[],"D:\\Work\\BioForge\\vsm-front-end\\src\\pages\\dashboard\\dashboard.js",["52"],"D:\\Work\\BioForge\\vsm-front-end\\src\\components\\NavBar\\Navbar.js",["53","54","55"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n    //   const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        {/* <MenuIcon /> */}\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" >\r\n                        News\r\n          </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n}",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":19,"column":21,"nodeType":"62","messageId":"63","endLine":19,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":33,"column":5,"nodeType":"62","endLine":33,"endColumn":14,"suggestions":"66"},{"ruleId":"64","severity":1,"message":"67","line":33,"column":15,"nodeType":"68","endLine":38,"endColumn":6},{"ruleId":"60","severity":1,"message":"69","line":10,"column":9,"nodeType":"62","messageId":"63","endLine":10,"endColumn":17},{"ruleId":"60","severity":1,"message":"70","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":14},{"ruleId":"60","severity":1,"message":"71","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":22},{"ruleId":"60","severity":1,"message":"72","line":2,"column":24,"nodeType":"62","messageId":"63","endLine":2,"endColumn":34},{"ruleId":"60","severity":1,"message":"73","line":2,"column":36,"nodeType":"62","messageId":"63","endLine":2,"endColumn":41},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'setVsmData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPatient'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [bed] as a second argument to the useEffect Hook.",["76"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'onChange' is assigned a value but never used.","'Card' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Add dependencies array: [bed]",{"range":"79","text":"80"},[1136,1136],", [bed]"]